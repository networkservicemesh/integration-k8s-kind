---
name: ci
on:
  pull_request:
  push:
    branches:
      - 'release/**'
jobs:
  yamllint:
    name: yamllint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v1
      - name: Install yamllint
        run: pip install --user yamllint
      - name: Run yamllint
        run: ~/.local/bin/yamllint -c .yamllint.yml --strict .
  shellcheck:
    name: shellcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: shellcheck
        uses: fkautz/shell-linter@v1.0.1
  golangci-lint:
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.16
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.35
  excludeFmtErrorf:
    name: exclude fmt.Errorf
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Exclude fmt.Errorf
        run: |
          if grep -r --include=*.go --exclude=*.pb.go fmt.Errorf . ; then
           echo "Please use errors.Errorf (or errors.New or errors.Wrap or errors.Wrapf) as appropriate rather than fmt.Errorf"
           exit 1
          fi
  checkgomod:
    name: check go.mod and go.sum
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v1
        with:
          go-version: 1.16
      - run: go mod tidy
      - name: Check for changes in go.mod or go.sum
        run: |
          git diff --name-only --exit-code go.mod || ( echo "Run go tidy" && false )
          git diff --name-only --exit-code go.sum || ( echo "Run go tidy" && false )
  interdomain-kind:
    runs-on: ubuntu-latest
    env:
      KUBERNETES_VERSION: ${{ secrets.NSM_KUBERNETES_VERSION }}
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/setup-go@v1
        with:
          go-version: 1.16
          github-token: ${{ github.token }}
      - name: Set go env
        run: |
          echo GOPATH=$GITHUB_WORKSPACE >> $GITHUB_ENV
          echo GO111MODULE=on >> $GITHUB_ENV
          echo $GITHUB_WORKSPACE/bin >> $GITHUB_PATH
      - uses: actions/checkout@v2
        with:
          path: ${{ github.workspace }}/src/github.com/${{ github.repository }}
      - name: Get kind
        run: go get sigs.k8s.io/kind@v0.11.1
      - name: Create kind clusters
        run: |
          if [[ $KUBERNETES_VERSION=="" ]]; then
              KUBERNETES_VERSION="v1.22.1"
          fi
          for (( i = 1; i <= 3; i++ )); do
              kind create cluster --name "kind-${i}" --config cluster-config-interdomain.yaml --image="kindest/node:$KUBERNETES_VERSION"
              configPath=${{ github.workspace }}/src/github.com/${{ github.repository }}/config${i}
              kind get kubeconfig --name "kind-${i}" > ${configPath}
              echo KUBECONFIG${i}=${configPath} >> $GITHUB_ENV
              echo CLUSTER${i}_CIDR="172.18.${i}.128/25" >> $GITHUB_ENV
          done
        working-directory: ${{ github.workspace }}/src/github.com/${{ github.repository }}
      - name: Interdomain tests
        run: |
          go test -count 1 -timeout 1h -race -v -run Interdomain
        env:
          ARTIFACTS_DIR: interdomain-logs
        working-directory: ${{ github.workspace }}/src/github.com/${{ github.repository }}
      - name: Cleanup resources
        if: ${{ success() || failure() || cancelled() }}
        run: kind delete clusters $(kind get clusters)
      - name: Upload artifacts
        if: ${{ success() || failure() || cancelled() }}
        uses: actions/upload-artifact@v2
        with:
          name: Interdomain logs
          path: ${{ github.workspace }}/src/github.com/${{ github.repository }}/interdomain-logs
